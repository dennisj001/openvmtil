#! /usr/local/bin/cfrtil -s

verbosity 0 =
: hi 1 6 + p ;
: hey nl hi hi hi ;
verbosity 1 = 
hey
//version
nl 
verbosity 1 =
Int
Lisp
(define yfac (lambda (yy n) (if* (< n 2) 1 (* n (yy yy (- n 1)))))) 
(yfac yfac 10) nl
(define yfacc (lambda (yyy n1) (if* (< n1 2) (1) (* n1 (yyy yyy (- n1 1)))))) 
(yfacc yfacc 10) nl
(yfacc yfacc 7) nl //pause
(define fibc (lambda ( n ) (ifElse (< n 2) n (+ (fibc (- n 1)) (fibc (- n 2))))))
(fibc 20)
lispOff //pause
c_syntaxOn
int
fac4 ( n ) 
{ 
    facc = 1 ;
    while ( n > 1 ) 
    {
        facc = n -- * facc ;
    }
    p ( facc ) ;
    return ( facc ) ;
}
wdiss ( ' fac4 find ) ; 
fac4 ( 7 ) dup p nl 5040 _assert0 s //pause
c_syntaxOff
bye

