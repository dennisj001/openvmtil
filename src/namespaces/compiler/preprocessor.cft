5

: apause ; //pause ;
"ppx" var "ppxe" var
#if 0
#if 1
"\npreprocessor test error 0\n" ps pause
#endif
#else
#if 0
#else
#if 0
#else // preprocessor testing ...
#elif 0
#elif 1
#if 0
#else
"\npreprocessor test ok1\n" ps apause
ppx dup @ 1 + =
#endif
#if 0
#elif 0
#elif 0
#elif 1
"\npreprocessor test ok2\n" ps apause
ppx dup @ 1 + =
#endif
#if 1
"\npreprocessor test ok3\n" ps apause
ppx dup @ 1 + =
#endif
#elif 0
#if 0
#else
"\npreprocessor test error 1\n" ps pause
ppxe dup @ 1 - =
#endif
#if 0
#else
"\npreprocessor test error 1.1\n" ps pause
ppxe dup @ 1 + =
#endif
#elif 1
#if 0
#else
"\npreprocessor test error 2\n" ps pause
ppxe dup @ 1 + =
#endif
#elif 1
#if 0
#else
"\npreprocessor test error 3\n" ps pause
ppxe dup @ 1 + =
#endif
#endif
#endif
ppx @ dup "ppx =" ps p 3 _assert nl
ppxe @ dup "ppxe =" ps p 0 _assert 
#endif
apause

2 + 7 assertStkChk // stack checking

