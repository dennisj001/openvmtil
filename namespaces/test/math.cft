5
"\nmath test\n" ddps

Int
: mt 6 ++ p ; mt
: mt1 8 -- p ; mt1
: mta 1 5 + ++ p ; mta
: mt1a 9 1 - -- p ; mt1a
: mt2 ( n ) ++ n @ p ; 6 mt2
: mt3 ( n ) n @ ++ p ; 6 mt3 
: mt4 ( n ) n ++ n @ p ; 6 mt4 
#if 1
C
: t* ( a b -- TOS ) a @ b @ * ; 3 4 t* 12 _assert
: t+ ( a b ) a @ b @ + p ; 3 4 t+ 
: t* ( a b c d -- TOS ) a @ b @ c @ d @ * * * ; 
// ' t* wdiss 
1 2 3 4 t* 24 _assert
: t+ ( a b c d -- TOS ) a @ b @ c @ d @ + + + ; 
// ' t+ wdiss 
1 2 3 4 t+ 10 _assert
: hi ( n ) n @ 2 / 2 / 2 / p ; 32 hi
' hi wdiss
: hi ( n ) 32 n @ / n @ / n @ / p ; 2 hi
' hi wdiss
: moe ( n m ) n m @ <<= n @ p ;
// ' moe wdiss
2 6 moe 1 16 moe // s pause
: moe ( n m ) n m @ >>= n @ p ;
// ' moe wdiss
128 6 moe 65536 16 moe // s pause
: moe ( n m ) n m @ *= n @ p ;
// ' moe wdiss // s pause
2 3 moe 4 5 moe // s pause
: moe ( n m ) n m @ /= n @ p ;
' moe wdiss 
8 2 moe 32 8 moe // s pause
: moe ( n ) n 2 /= n @ p ;
' moe wdiss 
8 moe 32 moe // s pause
: moe ( n m ) n m @ &= n @ p ;
// ' moe wdiss 
nl 2 3 moe 5 7 moe // s pause
#endif
2 + 7 assertStkChk // stack checking
